# Expect this list to be groomed further!
1. [-] - Guitar Note Component
   1. [-] - programmatically create an svg component
      1. [X] - draw a line
      2. [X] - draw the top string
      3. [X] - draw six strings
      4. [X] - draw a fret
      5. [X] - draw the nut
      6. [X] - draw inlays
      7. [ ] - make strings angled properly (optional)
      8. [X] - draw circles for notes for open strings
      9. [X] - add note text to circles
	 1. [X] - get formula to calculate octaves for all frets, begining with open fret
	 2. [X] - add CORRECT octaves to text
	 3. [X] - color by octaves
	 4. [X] - add classes for note, octave, frequency
      10. [X] - draw notes for a string per fret
      11. [X] - draw all notes for the guitar
   2. [X] - make all notes disappear
   3. [X] - Make a single notes appear when played
   4. [X] - Make all notes appear when played
   5. [X] - put a last event status in bottom
   6. [X] - choose different tunings
   7. [X] - choose number of strings
2. [-] - Create YAML Lessons (ongoing)
   1. [ ] - investigate YAML format
   2. [ ] - investigate and integrate YAML editor
   3. [ ] - Lessons should have
      1. [ ] - Name
      2. [ ] - Store in local storage
      3. [ ] - Guitar Note Component integration
   4. [-] - note memorization lesson
      1. [X] - select strings / frets to focus on
      2. [ ] - choose how quickly guide note disappear
	 1. [ ] - after time
	 2. [ ] - after so many correct ones
      3. [ ] - choose lesson duration (option to go infinite)
	 1. [ ] - time interval
	 2. [ ] - certain times asked
	 3. [ ] - certain correct ones
	 4. [ ] - choose how many correct answers the fret board increases
	    1. [ ] - choose whether or not the guide notes reappear
   5. [ ] - List available lessons
   6. [ ] - View lesson
   7. [ ] - Fret / String choice
   8. [ ] - how many notes to complete lesson (maybe)
   9. [ ] - note memorization lesson
      1. [ ] - scale memorization
      2. [ ] - different keys
3. [ ] - Host at https://aural.training
   1. [ ] - automate deploy with CircleCI
4. [ ] - user settings page
   1. [ ] - basic profile
   2. [ ] - save settings such as
      1. [ ] - preferred guitar
   3. [ ] - show a habit / git commits like-status
      1. [ ] - show streaks like in habits
   4. [ ] - Add create account
      1. [ ] - add login page
      2. [ ] - sync with local storage
5. [ ] - "chord" playing
   1. [ ] - detect chords by playing each note separately
   2. [ ] - CAGED system quiz
      1. [ ] - find chord (x) at (y) fret
      2. [ ] - find nearest (i) chord
   3. [ ] - Ability to play tabs
6. [ ] - Voice Training
   1. [ ] - determine vocal range
      1. [ ] - save as a setting
   2. [ ] - get music and sing along
      1. [ ] - adjusted to comfortable pitch
7. [ ] - component to play back tones at intervals
8. [-] - Interval Training
   1. [ ] - solfege - associate notes with songs as settings
   2. [X] - play interval with guitar
   3. [ ] - sing interval
   4. [ ] - sing interval, play interval on guitar
   5. [ ] - play multiple notes in a row ("simon says")
      1. [ ] - guitar
      2. [ ] - voice
      3. [ ] - play the intervals starting from different notes / string
9. [ ] - Tuner Component
   1. [ ] - Note within so many cents
   2. [ ] - time frame of notes are shown like in 'Nail the Pitch'
   3. [ ] - "Give me a note" quiz, a lesson that starts with each day to
      get you to hit a certain note so that you tune your own internal
      reference note
      1. [ ] - it will ask daily for you to "give it a note" a few times
      2. [ ] - over time, it will determine what your reference note should be
10. [ ] - Control the app with voice / Guitar.
    1. [ ] - certain combo of notes are used to progress
11. [ ] - Tab component
    1. [ ] - read tabs from some format, possibly Muse Score 3?
    2. [ ] - standardized tab?
    3. [ ] - make importing tab super easy
12. [ ] - tune manually - use your instrument to determine the tuning by playing
    each note and capturing the freq [Hassan = @antennafuzz = https://github.com/antennafuzz]
13. [ ] - find a path between notes in a particular Key [Hassan]
14. [ ] - use tunings other than A440, ex: A432 [Hassan]
15. [ ] - freq to midi [Hassan]
16. [ ] - play back a melody given the intervals, not the note names [Hassan]
